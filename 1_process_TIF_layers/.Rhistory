maxVal <- 8}
else {
maxVal <- 1
}
for (j in 1:length(flydays)) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
#curr <- calc(curr, fun=function(x){ x[x > maxVal | x < minVal] <- NA; return(x)} )
curr.rp <- projectRaster(curr, yld.m) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.m)
veg_index[j] <- cellStats(curr.rpm, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
vis.df <- cbind.data.frame(vis.df, veg_index)
#names(vis.df)[2+i] <- vis.list[i]
names(vis.df)[i] <- vis.list[i]
}
vis.df
write.table(vis.df, file="avg_VI_2.txt", quote=F, sep="\t", row.names=F)
source("get_max_val.R")
getwd()
setwd("~/Documents/GitHub/XASU_rice/1_process_TIF_layers/")
source("get_max_val.R")
library(raster)
minVal <- 0
process_VIs <- function(vi, in_rast, ex_rast, maxVal) {
# This function processes an input raster to have the same extent, crs, and resolution as an example input raster
# Vegetation indices are also processed to set appropriate values to NA
# ex: process_VIs("CIgreen", CIgreen.tif, yld.m)
in_rast <- raster::calc(in_rast, fun=function(x){ x[x > maxVal | x < minVal] <- NA; return(x)} )
in_rast <- projectRaster(in_rast, ex_rast) # some of the layers are not in UTM coordinates
in_rast <- mask(in_rast, ex_rast)
return(in_rast)
}
source("get_max_val.R")
source("process_VIs.R")
library(raster)
library(rgdal)
library(sf)
library(stringr)
library(ggplot2)
## get yield data layer, downsample, mask; base all other layers on this layer
yld <- raster('/Volumes/ExtremeSSD/Data/Yield.tif') # utm, 5 cm resolution
## get yield data layer, downsample, mask; base all other layers on this layer
yld <- raster('/Volumes/ABISSD/Yield.tif') # utm, 5 cm resolution
yld.5 <- aggregate(yld, 10) # 0.5 x 0.5 m resolution
crop_extent <- readOGR(paste("/Volumes/ABISSD/Data/Humnoke/Carr_North/04-11-2019/Carr_N_Without_Ditch.shp", sep="/"))
crop_extent <- readOGR(paste("/Volumes/ABISSD/Data/04-11-2019/Carr_N_Without_Ditch.shp", sep="/"))
crop_extent <- readOGR(paste("/Volumes/ABISSD/04-11-2019/Carr_N_Without_Ditch.shp", sep="/"))
yld.5d <- crop(yld.5, crop_extent)
yld.5dm <- mask(yld.5d, crop_extent) # 5616 cells; 5235 of these are non-NA
yld.5
hist(yld.5dm)
quantiles(yld.5dm)
plot(yld.5dm)
quartiles(yld.5dm)
library(raster)
quantiles(yld.5dm)
quantile(yld.5dm)
## what is the distribution of yield values?
hist(yld.5dm)
?quantile
?quantile
## what is the distribution of yield values?
hist(yld.5dm, probs = c(0.10, 0.9))
## what is the distribution of yield values?
quantile(yld.5dm, probs = c(0.10, 0.9))
quantile(yld.5dm, probs = c(0.10, 0.9))
## what is the distribution of yield values?
hist(yld.5dm)
## create a mask for the lower 10%
lower_10 <- raster::calc(yld.5dm, fun=function(x){ x[x > 154.6] <- NA; return(x)} )
plot(lower_10)
upper_10 <- raster::calc(yld.5dm, fun=function(x){ x[x < 194.5] <- NA; return(x)} )
plot(upper_10)
# # use yield layer for projection
yld <- raster('/Volumes/ExtremeSSD/Data/Yield.tif')
# # use yield layer for projection
yld <- raster('/Volumes/ABISSD/Yield.tif')
yld
yld.5 <- aggregate(yld, 10) # 0.5 x 0.5 m resolution
crop_extent <- readOGR(paste("/Volumes/ABISSD/04-11-2019/Carr_N_Without_Ditch.shp", sep="/"))
## what is the distribution of yield values?
hist(yld.5m)
yld.m <- mask(yld.5, crop_extent)
## what is the distribution of yield values?
hist(yld.5m)
## what is the distribution of yield values?
hist(yld.m)
quantile(yld.5dm, probs = c(0.10, 0.9)) # 154.6; 194.5
quantile(yld.m, probs = c(0.10, 0.9)) # 154.6; 194.5
# set up a dataframe with the indices
vis.list <- str_replace(channels, '.tif', '')
flydays <- c("04-11-2019","05-21-2019","06-13-2019","06-29-2019","07-11-2019","08-01-2019", "08-13-2019", "08-21-2019","08-28-2019","09-07-2019","09-13-2019")
channels <- c("CIgreen.tif","GNDVI.tif","NAVI.tif","NDVI.tif","RENDVI.tif","TGI.tif","Thermal.tif")
path_to_raster <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/"
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"))
veg_index = rep(0,length(flydays))
minVal <- 0
j=1
i=1
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
path_to_raster <- "/Volumes/ABISSD/"
j=1
i=1
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs("CIgreen", curr, yld.m, get_max_val("CIgreen"))
processed_rast
plot(processed_rast)
# set up a dataframe with the indices
vis.list <- str_replace(channels, '.tif', '')
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"))
vis.df
veg_index = rep(0,length(flydays))
veg_index
vis.df <- data.frame(Day=flydays Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"))
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"))
vis.df
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
vis.df
flydays <- c("04-11-2019","05-21-2019","06-13-2019","06-29-2019","07-11-2019","08-01-2019", "08-13-2019", "08-21-2019","08-28-2019","09-07-2019","09-13-2019")
channels <- c("CIgreen.tif","GNDVI.tif","NAVI.tif","NDVI.tif","RENDVI.tif","TGI.tif","Thermal.tif")
path_to_raster <- "/Volumes/ABISSD/"
vis.list <- str_replace(channels, '.tif', '')
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
vi_mean = rep(0,length(flydays))
vi_low = rep(0,length(flydays))
vi_high = rep(0,length(flydays))
for (i in 1:1) {
for (j in 1:length(flydays)) {
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vi_mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vi_low[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vi_high[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
vis.df <- cbind.data.frame(vis.df, vis.list[i], vi_mean, vi_low, vi_high)
#names(vis.df)[i] <- vis.list[i]
}
vis.df
plot(rast_hi)
plot(rast_low)
plot(rast_hi)
vi_mean
flydays
for (i in 1:1) {
#for (j in 1:length(flydays)) {
for (j in 1:4) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vi_mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vi_low[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vi_high[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
vis.df <- cbind.data.frame(vis.df, vis.list[i], vi_mean, vi_low, vi_high)
# if(i==1) {all.df <- vis.df
#  } else
}
vis.df
for (i in 1:2) {
#for (j in 1:length(flydays)) {
for (j in 1:4) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vi_mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vi_low[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vi_high[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
vis.df <- cbind.data.frame(vis.df, vis.list[i], vi_mean, vi_low, vi_high)
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
}
for (i in 1:2) {
#for (j in 1:length(flydays)) {
for (j in 1:2) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vi_mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vi_low[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vi_high[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
vis.df <- cbind.data.frame(vis.df, vis.list[i], vi_mean, vi_low, vi_high)
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
}
all.df
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
for (i in 1:2) {
#for (j in 1:length(flydays)) {
for (j in 1:2) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vis.df$Channel[j] <- vis.list[i]
vis.df$Mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vis.df$Lower[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vis.df$Upper[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
}
all.df
for (i in 1:length(vis.list)) {
for (j in 1:length(flydays)) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vis.df$Channel[j] <- vis.list[i]
vis.df$Mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vis.df$Lower[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vis.df$Upper[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
}
write.table(vis.df, file="avg_VI_3.txt", quote=F, sep="\t", row.names=F)
vis.df
write.table(all.df, file="avg_VI_3.txt", quote=F, sep="\t", row.names=F)
all.df
source('~/Documents/GitHub/XASU_rice/Figures_for_MS/plotIndices.R')
for (7 in 1:length(vis.list)) {
for (j in 1:length(flydays)) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vis.df$Channel[j] <- vis.list[i]
vis.df$Mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vis.df$Lower[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vis.df$Upper[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
}
all.df
vis.df
minVal
maxCal
maxVal
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/get_max_val.R')
minVal
maxVal
minVal <- -1000
minVal
curr
plot(curr)
all.df
all.df[1:66,]
all.df <- all.df[1:66,]
for (i in 7:length(vis.list)) {
for (j in 1:length(flydays)) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vis.df$Channel[j] <- vis.list[i]
vis.df$Mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vis.df$Lower[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vis.df$Upper[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
}
all.df
curr
plot(curr)
i=1
j=1
i=7
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/get_max_val.R')
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/process_VIs.R')
yld.m
quantile(yld.m, probs = c(0.10, 0.9)) # 154.6; 194.5
all.df <- all.df[1:66,]
for (i in 7:length(vis.list)) {
for (j in 1:length(flydays)) {
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
processed_rast <- process_VIs(vis.list[i], curr, yld.m, get_max_val(vis.list[i]))
vis.df$Channel[j] <- vis.list[i]
vis.df$Mean[j] <- cellStats(processed_rast, stat='mean', na.rm=TRUE)
rast_low <- mask(processed_rast, lower_10)
vis.df$Lower[j] <-  cellStats(rast_low, stat='mean', na.rm=TRUE)
rast_hi <- mask(processed_rast, upper_10)
vis.df$Upper[j] <-  cellStats(rast_hi, stat='mean', na.rm=TRUE)
message(paste0("Done with ", vis.list[i], ", ", flydays[j]))
}
if(i==1) {
all.df <- vis.df
} else {
all.df <- rbind.data.frame(all.df, vis.df)
}
vis.df <- data.frame(Day=flydays, Stage=c("fallow","VEG","VEG","VEG","REP_R0","REP_R2","REP_R4","GF","GF","GF","GF"),Channel=NA, Mean=NA, Lower=NA, Upper=NA)
}
all.df
write.table(all.df, file="avg_VI_3.txt", quote=F, sep="\t", row.names=F)
plot(curr)
curr
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
plot(curr)
curr
curr <- raster(paste(path_to_raster,flydays[5],channels[7], sep = "/"))
curr
plot(curr)
curr <- raster(paste(path_to_raster,flydays[1],channels[7], sep = "/"))
plot(curr)
curr <- raster(paste(path_to_raster,flydays[2],channels[7], sep = "/"))
curr
plot(curr)
curr <- raster(paste(path_to_raster,flydays[3],channels[7], sep = "/"))
plot(curr)
curr
curr <- raster(paste(path_to_raster,flydays[4],channels[7], sep = "/"))
curr
plot(curr)
all.df
all.df <- all.df[1:66,]
write.table(all.df, file="avg_VI_3.txt", quote=F, sep="\t", row.names=F)
# plot, 1 col = 85 mm
vis.df$Day <- mdy(vis.df$Day)
head(all.df)
df.long <- pivot_longer(all.df, cols=Mean:Upper)
df.long
df.nnr <- subset(df.long, name!="CIgreen" & name!="TGI")
df.chl <- subset(df.long, name=="CIgreen" | name=="TGI")
head(df.nnl)
head(df.nnr)
ggplot(df.long, aes(x=Day, y=value, lty=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(.~Channel)
df.long
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(.~Channel)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~.)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~.) + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 1, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=1, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=1, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=1, label="R4")
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~.) + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 1, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=1, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=1, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=1, label="R4")
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~.) + labs(lty="Veg. Index", col="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~., scales=F) + labs(lty="Veg. Index", col="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~., scales="free") + labs(lty="Veg. Index", col="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(c(2,1,3))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + geom_point() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))+
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 1, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=1, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=1, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=1, label="R4")
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))+
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 1, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))+
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 1, alpha = .2)
all.df$Day
class(all.df)
str(all.df)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))+
annotate("rect", xmin = as.Date("07-11-2019"), xmax = as.Date("08-13-2019"), ymin =0, ymax = 1, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))+
annotate("rect", xmin = as.Date("07-11-2019"), xmax = as.Date("08-13-2019"), ymin =0, ymax = 1, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))+
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), alpha = .2)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))
df.long
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin=0, ymax=max(df.long$value), alpha = .2)
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, hjust=1))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, hjust=-1))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, vjust=-1))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, vjust=1))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.8))
ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5))
p.all <- ggplot(df.long, aes(x=Day, y=value, lty=name, group=name)) +
geom_line() + theme_classic() + facet_grid(Channel~., scales="free") +
labs(lty="Veg. Index", col="Veg. Index") +
scale_linetype_manual(values=c(2,1,3)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5))
pdf("Figure1_VIs.pdf", width=3.35, height=6)
p.all
dev.off()
all.df
