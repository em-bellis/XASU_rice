ggplot(tmp, aes(x = value, col = name)) + geom_density() + xlim(c(25,100)) + theme_grey()
ggplot(tmp, aes(x = value, col = name)) + geom_density() + xlim(c(25,100)) + theme_light()
ggplot(tmp, aes(x = value, col = name)) + geom_density() + xlim(c(25,100)) + theme_dark()
ggplot(tmp, aes(x = value, col = name)) + geom_density() + xlim(c(25,100)) + theme_light()
ggplot(tmp, aes(x = value, col = name)) + geom_density() + xlim(c(25,100)) + theme_minimal()
ggplot(tmp, aes(x = value, fill = name)) + geom_density() + xlim(c(25,100)) + theme_minimal()
ggplot(tmp, aes(x = value, fill = name)) + geom_density(alpha=0.5) + xlim(c(25,100)) + theme_minimal()
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(alpha=0.5) + xlim(c(25,100)) + theme_minimal()
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(alpha=0.5) + xlim(c(25,100)) + theme_minimal() + facet_grid()
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(alpha=0.5) + xlim(c(25,100)) + theme_minimal() + facet_grid(.~name)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(alpha=0.5) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram() + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black") + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 20) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(60, 70, 80, 90)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(55, 60, 65, 70, 75, 80, 85, 90, 95)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
nrow(subset(grades$Exam2>= 80))
nrow(subset(grades, grades$Exam2>= 80))
(subset(grades, grades$Exam2>= 80))
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(50, 65, 69, 70, 74, 79, 85, 89, 90, 94)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(60, 70, 80, 90)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(55, 60, 65, 70, 75, 80, 85, 90, 95)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(55, 59.5, 64.5, 69.5, 74.5, 79.5, 84.5, 89.5, 94.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(55, 60, 65, 70, 75, 80, 85, 90, 95)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_density(alpha=0.5) + xlim(c(25,100)) + theme_minimal()
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 40) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 30) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 25) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10, breaks = c(0,60,70,80,90,100)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10, breaks = c(0,59.5,70,80,90,100)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
grades
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10, breaks = c(0,49.5, 59.5, 69.5, 79.5, 89.5,99.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10, breaks = c(0,49.5, 59.5, 69.5, 79.5, 89.5,99.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(name = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10, breaks = c(0,49.5, 59.5, 69.5, 79.5, 89.5,99.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(names() = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", bins = 10, breaks = c(0,49.5, 59.5, 69.5, 79.5, 89.5,99.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(0,49.5, 59.5, 69.5, 79.5, 89.5,99.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(49.5, 59.5, 69.5, 79.5, 89.5,99.5)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black", breaks = c(49, 59, 69, 79, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10 breaks = c(49, 59, 69, 79, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(49, 59, 69, 79, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + scale_fill_manual(label = "", values = c("red","blue"))
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
grades
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79.5, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.)
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79.5, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + theme(legend. position = "none")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79.5, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + theme(legend. position = "none")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79.5, 89,99)) + xlim(c(25,100)) + theme_minimal() + facet_grid(name~.) + theme(legend.position = "none")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79.5, 89,99)) + xlim(c(40,100)) + theme_minimal() + facet_grid(name~.) + theme(legend.position = "none")
ggplot(tmp, aes(x = value, fill = name)) + geom_histogram(col = "black",bins = 10, breaks = c(0, 49, 59, 69, 79.5, 89,99)) + xlim(c(40,100)) + theme_minimal() + facet_grid(name~.) + theme(legend.position = "none") + xlab("Score")
buac_to_tha <- function(bushels) {
return(bushels * 46 /  2204.62 * 2.47105)
}
buac_to_tha(181.21)
library(xgboost)
citation("xgboost")
citation()
library(reticulate)
citation(reticulate)
citation("reticulate")
library(lubridate)
library(ggplot2)
library(tidyverse)
library(wesanderson)
rice <- read.csv('rice_remote_sensing - Sheet1.csv', header=T)
rice$Date <- as.Date(rice$Date, "%m-%d-%Y")
rice <- subset(rice, Date != "2019-06-13")
#rice.long <- rice %>% pivot_longer(c(Train_MSE, Val_MSE))
rice.long <- rice %>% pivot_longer(c(Train_MSE, Val_MSE, Test_MSE))
rice$id <- paste0(rice$Model, rice$Date, sep="_")
rice.long$id <- paste0(rice.long$Model, rice.long$Date, sep="_")
rice.long$name <- factor(rice.long$name,      # Reordering group factor levels
levels = c("Test_MSE", "Val_MSE", "Train_MSE"),
labels = c("Test","Validation","Train"))
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=value, color = Model, group=id, pch = Set)) +
geom_point(position = position_dodge(width = 5), size = 1.1, alpha = 0.5) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
geom_line(position = position_dodge(width = 5), size = 0.3) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete"))) +
facet_grid(name~.) +
labs(shape = "Fold") +
ylab("MSE")
# save figure to file
pdf(file = "Fig2_allmods.pdf", width = 7.07, height = 4)
fig2
dev.off()
fig2
library(lubridate)
library(ggplot2)
library(tidyverse)
library(wesanderson)
# function to convert to tons/hectare
buac_to_tha <- function(bushels) {
return(bushels * 46 /  2204.62 * 2.47105) # 46 bushels/lb for rough rice; 2204 lbs per metric ton; 2.47 acres per hectare
}
rice <- read.csv('rice_remote_sensing - Sheet1.csv', header=T)
rice$Date <- as.Date(rice$Date, "%m-%d-%Y")
rice <- subset(rice, Date != "2019-06-13")
#rice.long <- rice %>% pivot_longer(c(Train_MSE, Val_MSE))
rice.long <- rice %>% pivot_longer(c(Train_MSE, Val_MSE, Test_MSE))
rice$id <- paste0(rice$Model, rice$Date, sep="_")
rice.long$id <- paste0(rice.long$Model, rice.long$Date, sep="_")
rice.long$name <- factor(rice.long$name,      # Reordering group factor levels
levels = c("Test_MSE", "Val_MSE", "Train_MSE"),
labels = c("Test","Validation","Train"))
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=value/, color = Model, group=id, pch = Set)) +
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=buac_to_tha(value)/9.06*100, color = Model, group=id, pch = Set)) +
geom_point(position = position_dodge(width = 5), size = 1.1, alpha = 0.5) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
geom_line(position = position_dodge(width = 5), size = 0.3) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete"))) +
facet_grid(name~.) +
labs(shape = "Fold") +
ylab("MSE")
fig2
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=(buac_to_tha(value)/9.06*100), color = Model, group=id, pch = Set)) +
geom_point(position = position_dodge(width = 5), size = 1.1, alpha = 0.5) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
geom_line(position = position_dodge(width = 5), size = 0.3) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete"))) +
facet_grid(name~.) +
labs(shape = "Fold") +
ylab("MSE")
fig2
rice.long
rice.long$value
buac_to_tha(rice.long$value)
rice.long$value
buac_to_tha(rice.long$value)
buac_to_tha(rice.long$value)/9.06
buac_to_tha(rice.long$value)/9.06*100
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=(buac_to_tha(sqrt(value))/9.06*100), color = Model, group=id, pch = Set)) +
geom_point(position = position_dodge(width = 5), size = 1.1, alpha = 0.5) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
geom_line(position = position_dodge(width = 5), size = 0.3) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete"))) +
facet_grid(name~.) +
labs(shape = "Fold") +
ylab("MSE")
fig2
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=(buac_to_tha(sqrt(value))/9.06*100), color = Model, group=id, pch = Set)) +
geom_point(position = position_dodge(width = 5), size = 1.1, alpha = 0.5) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
geom_line(position = position_dodge(width = 5), size = 0.3) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete"))) +
facet_grid(name~.) +
labs(shape = "Fold") +
ylab("RMSE (%)")
fig2
library(lubridate)
library(ggplot2)
library(tidyverse)
library(wesanderson)
# function to convert to tons/hectare
buac_to_tha <- function(bushels) {
return(bushels * 46 /  2204.62 * 2.47105) # 46 bushels/lb for rough rice; 2204 lbs per metric ton; 2.47 acres per hectare
}
rice <- read.csv('rice_remote_sensing - Sheet1.csv', header=T)
rice$Date <- as.Date(rice$Date, "%m-%d-%Y")
rice <- subset(rice, Date != "2019-06-13")
#rice.long <- rice %>% pivot_longer(c(Train_MSE, Val_MSE))
rice.long <- rice %>% pivot_longer(c(Train_MSE, Val_MSE, Test_MSE))
rice$id <- paste0(rice$Model, rice$Date, sep="_")
rice.long$id <- paste0(rice.long$Model, rice.long$Date, sep="_")
rice.long$name <- factor(rice.long$name,      # Reordering group factor levels
levels = c("Test_MSE", "Val_MSE", "Train_MSE"),
labels = c("Test","Validation","Train"))
# all in one panel
fig2 <- ggplot(rice.long, aes(x=Date, y=(buac_to_tha(sqrt(value))/9.06*100), color = Model, group=id, pch = Set)) +
geom_point(position = position_dodge(width = 5), size = 1.1, alpha = 0.5) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
geom_line(position = position_dodge(width = 5), size = 0.3) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete"))) +
facet_grid(name~.) +
labs(shape = "Fold") +
ylab("RMSE (%)")
# save figure to file
pdf(file = "FigS1_allmods.pdf", width = 7.07, height = 4)
fig2
dev.off()
yld_stats <- rice.long %>%
#filter(name == "Train") %>%
select(Model, Set, Date, name, value) %>%
group_by(Model, Date, name) %>%
summarize(mean_yld = mean(value), sd_yld = sd(value))
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
pdf(file = "Fig2b_allmods.pdf", width = 3.5, height = 3)
fig3
dev.off()
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
yld_stats <- rice.long %>%
#filter(name == "Train") %>%
select(Model, Set, Date, name, value) %>%
group_by(Model, Date, name) %>%
summarize(mean_yld = mean(value), sd_yld = sd(value))
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
pdf(file = "Fig2b_allmods.pdf", width = 3.5, height = 3)
fig3
dev.off()
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
yld_stats
yld_stats %>% filter(Model == "3DCNN")
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
#geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
#geom_point(alpha = 0.7, size=0.7) +
#geom_line() +
geom_bar() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
#geom_point(alpha = 0.7, size=0.7) +
#geom_line() +
geom_bar(stat = "identity") +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
#geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
pdf(file = "Fig3_allmods.pdf", width = 3.5, height = 3)
fig3
dev.off()
yld_stats <- rice.long %>%
#filter(name == "Train") %>%
select(Model, Set, Date, name, value) %>%
group_by(Model, Date, name) %>%
summarize(mean_yld = mean(value), sd_yld = sd(value))
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
#geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
pdf(file = "Fig3_allmods.pdf", width = 3.5, height = 3)
fig3
dev.off()
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
dev.off()
yld_stats <- rice.long %>%
#filter(name == "Train") %>%
select(Model, Set, Date, name, value) %>%
group_by(Model, Date, name) %>%
summarize(mean_yld = mean(value), sd_yld = sd(value))
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model)) +
#geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
pdf(file = "Fig3_allmods.pdf", width = 3.5, height = 3)
fig3
dev.off()
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
yld_stats <- rice.long %>%
#filter(name == "Train") %>%
select(Model, Set, Date, name, value) %>%
group_by(Model, Date, name) %>%
summarize(mean_yld = mean(value), sd_yld = sd(value))
fig3 <- ggplot(yld_stats, aes(x=Date, y=(buac_to_tha(sqrt(mean_yld))/9.06*100), color=Model, lty = Model)) +
#geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("RMSE (%)") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
pdf(file = "Fig3_allmods.pdf", width = 3.5, height = 3)
fig3
dev.off()
ggplot(yld_stats, aes(x=Date, y=sd_yld, color=Model)) +
geom_point(alpha = 0.7, size=0.7) +
geom_line() +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
ylab("Average MSE") +
facet_grid(name~.) +
scale_color_manual(values = wes_palette("Zissou1", 5, type = c("discrete")))
fig3
yld_stats
yld_stats %>% filter(name == "Test")
yld_stats %>% filter(name == "Test" & Model =="2DCNN")
buac_to_tha(yld_stats %>% filter(name == "Test" & Model =="2DCNN")$mean_yld)
buac_to_tha((yld_stats %>% filter(name == "Test" & Model =="2DCNN")$mean_yld))
tmp = (yld_stats %>% filter(name == "Test" & Model =="2DCNN")$mean_yld)
tmp = (yld_stats %>% filter(name == "Test" & Model =="2DCNN"))$mean_yld
tmp
buac_to_tha(yld_stats %>% filter(name == "Test" & Model =="2DCNN"))$mean_yld
buac_to_tha(sqrt(tmp))
buac_to_tha(sqrt(tmp))/9.06
buac_to_tha(sqrt(tmp))/9.06*100
buac_to_tha(sqrt(tmp))/9.06*100[1:4]
buac_to_tha(sqrt(tmp))/9.06*100
buac_to_tha(sqrt(tmp[1:4]))/9.06*100
buac_to_tha(sqrt(tmp[5:10]))/9.06*100
tmpx = (yld_stats %>% filter(name == "Test" & Model =="xgboost"))$mean_yld
buac_to_tha(sqrt(tmpx[5:10]))/9.06*100
tmpx = (yld_stats %>% filter(name == "Test" & Model =="xgboost"))$sd_yld
buac_to_tha(sqrt(tmpx[5:10]))/9.06*100
buac_to_tha(sqrt(tmpx))/9.06*100
buac_to_tha(sqrt(tmp))/9.06*100
tmp = (yld_stats %>% filter(name == "Test" & Model =="2DCNN"))$sd_yld
buac_to_tha(sqrt(tmp))/9.06*100
library(lubridate)
library(ggplot2)
library(tidyverse)
library(wesanderson)
# function to convert to tons/hectare
buac_to_tha <- function(bushels) {
return(bushels * 46 /  2204.62 * 2.47105) # 46 bushels/lb for rough rice; 2204 lbs per metric ton; 2.47 acres per hectare
}
rice <- read.csv('rice_remote_sensing - Sheet2.csv', header=T)
p <- ggplot(rice, aes(x=Set, y=(Test_MSE - Not_Blanked), col = Channel_blanked, group = Channel_blanked, lty = Channel_blanked)) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
theme(panel.grid.major.x = element_blank()) +
theme(panel.grid.minor.y = element_blank()) +
geom_line() +
scale_color_manual(name = "Blanked channel", values = wes_palette("Zissou1", 7, type = c("continuous"))) +
scale_linetype_discrete(name = "Blanked channel") +
ylab(expression(paste(Delta,"MSE"))) +
xlab("Fold")
pdf(file = "Fig4.pdf", width = 3.5, height = 2.5, pointsize = 6)
p
dev.off()
p
head(rice)
p <- ggplot(rice, aes(x=Set, y=buac_to_tha(sqrt(Test_MSE - Not_Blanked))/9.06*100, col = Channel_blanked, group = Channel_blanked, lty = Channel_blanked)) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
theme(panel.grid.major.x = element_blank()) +
theme(panel.grid.minor.y = element_blank()) +
geom_line() +
scale_color_manual(name = "Blanked channel", values = wes_palette("Zissou1", 7, type = c("continuous"))) +
scale_linetype_discrete(name = "Blanked channel") +
ylab(expression(paste(Delta,"MSE"))) +
xlab("Fold")
p
library(lubridate)
library(ggplot2)
library(tidyverse)
library(wesanderson)
# function to convert to tons/hectare
buac_to_tha <- function(bushels) {
return(bushels * 46 /  2204.62 * 2.47105) # 46 bushels/lb for rough rice; 2204 lbs per metric ton; 2.47 acres per hectare
}
rice <- read.csv('rice_remote_sensing - Sheet2.csv', header=T)
p <- ggplot(rice, aes(x=Set, y=(buac_to_tha(sqrt(Test_MSE) - sqrt(Not_Blanked)))/9.06*100, col = Channel_blanked, group = Channel_blanked, lty = Channel_blanked)) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
theme(panel.grid.major.x = element_blank()) +
theme(panel.grid.minor.y = element_blank()) +
geom_line() +
scale_color_manual(name = "Blanked channel", values = wes_palette("Zissou1", 7, type = c("continuous"))) +
scale_linetype_discrete(name = "Blanked channel") +
ylab(expression(paste(Delta,"MSE"))) +
xlab("Fold")
pdf(file = "Fig4.pdf", width = 3.5, height = 2.5, pointsize = 6)
p
dev.off()
p
library(lubridate)
library(ggplot2)
library(tidyverse)
library(wesanderson)
# function to convert to tons/hectare
buac_to_tha <- function(bushels) {
return(bushels * 46 /  2204.62 * 2.47105) # 46 bushels/lb for rough rice; 2204 lbs per metric ton; 2.47 acres per hectare
}
rice <- read.csv('rice_remote_sensing - Sheet2.csv', header=T)
p <- ggplot(rice, aes(x=Set, y=(buac_to_tha(sqrt(Test_MSE) - sqrt(Not_Blanked)))/9.06*100, col = Channel_blanked, group = Channel_blanked, lty = Channel_blanked)) +
theme_light() +
theme(panel.grid.minor.x = element_blank()) +
theme(panel.grid.major.x = element_blank()) +
theme(panel.grid.minor.y = element_blank()) +
geom_line() +
scale_color_manual(name = "Blanked channel", values = wes_palette("Zissou1", 7, type = c("continuous"))) +
scale_linetype_discrete(name = "Blanked channel") +
ylab(expression(paste(Delta,"RMSE (%)"))) +
xlab("Fold")
pdf(file = "Fig4.pdf", width = 3.5, height = 2.5, pointsize = 6)
p
dev.off()
p
buac_to_tha(sqrt(Test_MSE) - sqrt(Not_Blanked))
buac_to_tha(sqrt(rice$Test_MSE) - sqrt(rice$Not_Blanked))
buac_to_tha(sqrt(rice$Test_MSE) - sqrt(rice$Not_Blanked))*100
rice
filter(rice, Channel_blanked == "CIgreen")
tmp <- filter(rice, Channel_blanked == "CIgreen")
buac_to_tha(sqrt(tmp$Test_MSE) - sqrt(tmp$Not_Blanked))*100
buac_to_tha(sqrt(tmp$Test_MSE) - sqrt(tmp$Not_Blanked))/9.06*100
buac_to_tha(sqrt(tmp$Test_MSE) - sqrt(tmp$Not_Blanked))
library(raster)
library(rgdal)
library(sf)
library(stringr)
library(ggplot2)
library(RColorBrewer)
setwd('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/')
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/get_max_val.R')
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/process_VIs.R')
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/output_labels.R')
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/create_daystack.R')
source('~/Documents/GitHub/XASU_rice/1_process_TIF_layers/output_images.R')
path_to <- "/Volumes/ABISSD/"
## get yield data layer, downsample, mask; base all other layers on this layer
yld <- raster(paste0(path_to,'Yield.tif')) # utm, 5 cm resolution
plot(yld)
buac_to_tha(50)
buac_to_tha(200)
buac_to_tha(150)
buac_to_tha(75)
0.08*9.06
