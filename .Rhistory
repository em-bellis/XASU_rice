subimg <- mat[r:(r+2),c:(c+2)]
mat
c = 2
r=13
subimg <- mat[r:(r+2),c:(c+2)]
subimg
mat
plot(mat)
plot(test)
plot(val)
plot(test)
mean(test)
cellStats(test)
cellStats(test, stat=mean())
cellStats(test, stat=mean
)
cellStats(val, stat=mean)
cellStats(train, stat=mean)
cellStats(val, stat=mean)
i = 2
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm)
curr.rpm <- mask(curr.rp, yld.5dm)
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
daystack
train <- crop(daystack, e.train)
val <- crop(daystack, e.val)
test <- crop(daystack, e.test)
sets <- c(test, train, val)
names(sets) <- c("test","train","val")
mean(daystack)
mean(daystack[1])
daystack[1]
daystack[[1]]
sets[[1]]
cellStats(sets[[1]], stat=mean)
cellStats(sets[[1]][[1]], stat=mean)
cellStats(sets[[1]][[2]], stat=mean)
tmp <- cellStats(sets[[1]][[2]], stat=mean)
tmp
subimg
matrix(data=rep(tmp,9))
matrix(data=rep(tmp,9), cols=3)
matrix(data=rep(tmp,9), ncol=3)
mat <- as.matrix(sets[[m]][[i]])
mean.val <- cellStats(sets[[m]][[i]], stat=mean)
dir.create(paste(path_to,"images/",flydays[j],"_mean/",names(sets)[[m]], sep=""), recursive=T)
subimg <- mat[r:(r+2),c:(c+2)]
meanimg <- matrix(data=rep(mean.val,9), ncol=3)
file_id <- paste(names(sets[[m]][[i]]),k,".csv", sep="")
if (is.na(mean(subimg)) == "FALSE") {
write.table(meanimg, file=paste(path_to,"images/",flydays[j],"/",names(sets)[[m]],"/",file_id,sep=""), quote=F, sep=",", row.names=F)
}
path_to
file
paste(path_to,"images/",flydays[j],"/",names(sets)[[m]],"/",file_id,sep="")
write.table(meanimg, file=paste(path_to,"images/",flydays[j],"_mean/",names(sets)[[m]],"/",file_id,sep=""), quote=F, sep=",", row.names=F)
round(mean.val)
round(mean.val,2)
mean.val <- round(cellStats(sets[[m]][[i]], stat=mean),2)
mean.val
mean.val <- round(cellStats(sets[[m]][[i]], stat=mean),3)
meanimg <- matrix(data=rep(mean.val,9), ncol=3)
e
write.table(meanimg, file=paste(path_to,"images/",flydays[j],"_mean/",names(sets)[[m]],"/",file_id,sep=""), quote=F, sep=",", row.names=F)
flydays <- c("04-11-2019","05-21-2019","06-13-2019","06-29-2019","07-11-2019","08-01-2019", "08-13-2019", "08-21-2019","08-28-2019","09-07-2019","09-13-2019")
channels <- c("CIgreen.tif","GNDVI.tif","NAVI.tif","NDVI.tif","RENDVI.tif","TGI.tif","Thermal.tif")
path_to_raster <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/"
for (j in 1:length(flydays)) {
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm)
curr.rpm <- mask(curr.rp, yld.5dm)
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack)
## split into test, validation, training sets
train <- crop(daystack, e.train)
val <- crop(daystack, e.val)
test <- crop(daystack, e.test)
sets <- c(test, train, val)
names(sets) <- c("test","train","val")
## create and save 3x3 pixel images
for (m in 1:3) { #m iterating over datasets
for (i in 1:length(channels)) { #i iterating over channels
mat <- as.matrix(sets[[m]][[i]])
mean.val <- round(cellStats(sets[[m]][[i]], stat=mean),3)
dir.create(paste(path_to,"images/",flydays[j],"_mean/",names(sets)[[m]], sep=""), recursive=T)
k <- 1 #k is a unique id for each subimage
for (r in 1:(dim(mat)[1]-2)) {
for (c in 1:(dim(mat)[2]-2)){
subimg <- mat[r:(r+2),c:(c+2)]
meanimg <- matrix(data=rep(mean.val,9), ncol=3)
file_id <- paste(names(sets[[m]][[i]]),k,".csv", sep="")
if (is.na(mean(subimg)) == "FALSE") {
write.table(meanimg, file=paste(path_to,"images/",flydays[j],"_mean/",names(sets)[[m]],"/",file_id,sep=""), quote=F, sep=",", row.names=F)
}
k <- k+1
}
}
}
}
}
warnings()
path_to <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/infiles_for_2DCNN/"
library(raster)
library(rgdal)
library(sf)
library(stringr)
library(ggplot2)
path_to <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/infiles_for_2DCNN/"
## get yield data layer, downsample, mask; base all other layers on this layer
yld <- raster('/Volumes/ExtremeSSD/Data/Yield.tif') # utm, 5 cm resolution
library(raster)
library(raster)
library(rgdal)
library(sf)
library(stringr)
library(ggplot2)
path_to <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/infiles_for_2DCNN/"
## get yield data layer, downsample, mask; base all other layers on this layer
yld <- raster('/Volumes/ExtremeSSD/Data/Yield.tif') # utm, 5 cm resolution
yld
plot(yld)
yld.5 <- aggregate(yld, 100) # 5 x 5 m resolution
yld.5
crop_extent <- readOGR(paste("/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/04-11-2019/Carr_N_Without_Ditch.shp", sep="/"))
crop_extent
plot(crop_extent, add=T)
yld.5d <- crop(yld.5, crop_extent)
plot(yld.5d)
yld.5d
yld.5dm <- mask(yld.5d, crop_extent) # 5616 cells; 5235 of these are non-NA
?crop
yld.5dm <- mask(yld.5d, crop_extent) # 5616 cells; 5235 of these are non-NA
plot(yld.5dm)
?mask
e.train <- (c(617964.6,618159.6, 3828596, 3828956))
train <- crop(yld.5dm, e.train)
plot(e.train)
plot(train)
e.val <- (c(617769.6,617964.6,3828596, 3828776))
val <- crop(yld.5dm, e.val)
e.test <- (c(617769.6,617964.6,3828776, 3828956))
test <- crop(yld.5dm, e.test)
sets <- c(test, train, val)
names(sets) <- c("test","train","val")
flydays <- c("04-11-2019","05-21-2019","06-13-2019","06-29-2019","07-11-2019","08-01-2019", "08-13-2019", "08-21-2019","08-28-2019","09-07-2019","09-13-2019")
channels <- c("CIgreen.tif","GNDVI.tif","NAVI.tif","NDVI.tif","RENDVI.tif","TGI.tif","Thermal.tif")
path_to_raster <- "/Volumes/Extreme SSD/Data/Humnoke/Carr_North/"
for (j in 1:length(flydays)) {
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm)
curr.rpm <- mask(curr.rp, yld.5dm)
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack)
train <- crop(daystack, e.train)
val <- crop(daystack, e.val)
test <- crop(daystack, e.test)
sets <- c(test, train, val)
names(sets) <- c("test","train","val")
## create and save 3x3 pixel images
for (m in 1:3) { #m iterating over datasets
for (i in 1:length(channels)) { #i iterating over channels
mat <- as.matrix(sets[[m]][[i]])
dir.create(paste(path_to,"images/",flydays[j],"/",names(sets)[[m]], sep=""), recursive=T)
k <- 1 #k is a unique id for each subimage
for (r in 1:(dim(mat)[1]-2)) {
for (c in 1:(dim(mat)[2]-2)){
subimg <- mat[r:(r+2),c:(c+2)]
file_id <- paste(names(sets[[m]][[i]]),k,".csv", sep="")
if (is.na(mean(subimg)) == "FALSE") {
write.table(subimg, file=paste(path_to,"images/",flydays[j],"/",names(sets)[[m]],"/",file_id,sep=""), quote=F, sep=",", row.names=F)
}
k <- k+1
}
}
}
}
for (j in 1:length(flydays)) {
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm)
curr.rpm <- mask(curr.rp, yld.5dm)
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack)
## split into test, validation, training sets
train <- crop(daystack, e.train)
val <- crop(daystack, e.val)
test <- crop(daystack, e.test)
sets <- c(test, train, val)
names(sets) <- c("test","train","val")
## create and save 3x3 pixel images
for (m in 1:3) { #m iterating over datasets
for (i in 1:length(channels)) { #i iterating over channels
mat <- as.matrix(sets[[m]][[i]])
dir.create(paste(path_to,"images/",flydays[j],"/",names(sets)[[m]], sep=""), recursive=T)
k <- 1 #k is a unique id for each subimage
for (r in 1:(dim(mat)[1]-2)) {
for (c in 1:(dim(mat)[2]-2)){
subimg <- mat[r:(r+2),c:(c+2)]
file_id <- paste(names(sets[[m]][[i]]),k,".csv", sep="")
if (is.na(mean(subimg)) == "FALSE") {
write.table(subimg, file=paste(path_to,"images/",flydays[j],"/",names(sets)[[m]],"/",file_id,sep=""), quote=F, sep=",", row.names=F)
}
k <- k+1
}
}
}
}
}
}
channels <- c("CIgreen.tif","GNDVI.tif","NAVI.tif","NDVI.tif","RENDVI.tif","TGI.tif","Thermal.tif")
path_to_raster <- "/Volumes/Extreme SSD/Data/Humnoke/Carr_North/"
j = 1
i = 1
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
path_to_raster <- "/Volumes/Extreme SSD/Data/Humnoke/Carr_North/"
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
flydays[j]
channels[i]
paste(path_to_raster,flydays[j],channels[i], sep = "/")
path_to_raster <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/"
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr
plot(curr)
i = 4
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
plot(curr)
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack)
library(raster)
library(rgdal)
library(sf)
library(stringr)
library(ggplot2)
path_to <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/infiles_for_2DCNN/"
## get yield data layer, downsample, mask; base all other layers on this layer
yld <- raster('/Volumes/ExtremeSSD/Data/Yield.tif') # utm, 5 cm resolution
yld.5 <- aggregate(yld, 100) # 5 x 5 m resolution
crop_extent <- readOGR(paste("/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/04-11-2019/Carr_N_Without_Ditch.shp", sep="/"))
yld.5d <- crop(yld.5, crop_extent)
yld.5dm <- mask(yld.5d, crop_extent) # 5616 cells; 5235 of these are non-NA
## divide into training, testing and validation sets
e.train <- (c(617964.6,618159.6, 3828596, 3828956))
train <- crop(yld.5dm, e.train)
e.val <- (c(617769.6,617964.6,3828596, 3828776))
val <- crop(yld.5dm, e.val)
e.test <- (c(617769.6,617964.6,3828776, 3828956))
test <- crop(yld.5dm, e.test)
sets <- c(test, train, val)
names(sets) <- c("test","train","val")
j = 1
j = 5
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack)
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack) # stack of channel data for one day
flydays <- c("04-11-2019","05-21-2019","06-13-2019","06-29-2019","07-11-2019","08-01-2019", "08-13-2019", "08-21-2019","08-28-2019","09-07-2019","09-13-2019")
channels <- c("CIgreen.tif","GNDVI.tif","NAVI.tif","NDVI.tif","RENDVI.tif","TGI.tif","Thermal.tif")
path_to_raster <- "/Volumes/ExtremeSSD/Data/Humnoke/Carr_North/"
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack) # stack of channel data for one day
j = 4
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack) # stack of channel data for one day
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
#curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack) # stack of channel data fo
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
#curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr.rp, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack) # stack of channel data for one day
for (i in 1:length(channels)) { # downsample, crop, and make raster stack for each day
curr <- raster(paste(path_to_raster,flydays[j],channels[i], sep = "/"))
#curr.rp <- projectRaster(curr, yld.5dm) # some of the layers are not in UTM coordinates
curr.rpm <- mask(curr, yld.5dm) # cut out the ditches
# something going on w/Thermal on 6-13-19, seems to be relative to Kelvin?
if (maxValue(curr.rpm) < (-200) && i==7) {
warning(paste('Adding 300 to thermal for ', flydays[j]))
curr.rpm <- curr.rpm + 300 # something going on w/Thermal on 6-13 seem to be relative to Kelvin?
}
if(i == 1){
daystack <- curr.rpm
} else {
daystack <- stack(daystack, curr.rpm)
}
}
plot(daystack) # stack of channel data for one day
#write.table(vis.df, file="avg_VI_2.txt", quote=F, sep="\t", row.names=F)
vis <- read.table(avg_VI.txt, header=T)
getwd()
#write.table(vis.df, file="avg_VI_2.txt", quote=F, sep="\t", row.names=F)
vis <- read.table("avg_VI.txt", header=T)
#write.table(vis.df, file="avg_VI_2.txt", quote=F, sep="\t", row.names=F)
vis.df <- read.table("avg_VI.txt", header=T)
# plot
library(lubridate)
vis.df$Day <- mdy(vis.df$Day)
head(vis.df)
ggplot(vis.df, aes(x=Day, y=CIgreen)) + geom_point()
ggplot(vis.df, aes(x=Day, y=CIgreen)) + geom_line()
?pivot_longer
??pivot_longer
pivot_longer(vis.df, cols=CIgreen:Thermal)
library(dplyr)
pivot_longer(vis.df, cols=CIgreen:Thermal)
library(tidyr)
pivot_longer(vis.df, cols=CIgreen:Thermal)
df.long <- pivot_longer(vis.df, cols=CIgreen:Thermal)
head(df.long)
ggplot(df.long, aes(x=name, y=value))
ggplot(df.long, aes(x=Day, y=value, col=name)) + geom_line()
ggplot(df.long, aes(x=Day, y=value, col=name)) + geom_line()
df.long <- subset(df.long, name!="Thermal")
ggplot(df.long, aes(x=name, y=value))
ggplot(df.long, aes(x=Day, y=value, col=name)) + geom_line()
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name) + geom_line()
)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line()
ggplot(df.long, aes(x=Day, y=value, col=name)) + geom_line() + geom_point()
ggplot(df.long, aes(x=Day, y=value, col=name)) + geom_line() + geom_point() + theme_bw()
ggplot(df.long, aes(x=Day, y=value, col=name)) + geom_line() + geom_point() + theme_classic()
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic()
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic(legend.title="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + theme(legend.title="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + theme(legend.title="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index")
)
vis.df
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = "2019-07-11", xmax = "2019-08-13", ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = 5, xmax = 7, ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = mdy("2019-07-11"), xmax = mdy("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = mdy("2019-07-11"), xmax = mdy("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
mdy("2019-08-13")
mdy(2019-08-13)
mdy(1)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = 5, xmax = 7, ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
df.long
vis.df
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Index", col="Index") + annotate("rect", xmin = 5, xmax = 7, ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name))
+ geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index")
+ annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
vline(x=as.Date("2019-07-11")) +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) + geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") + annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2)
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=10, label="R0")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=10, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=10, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=10, label="R4")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=10, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=9, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=7.75, label="R4")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=10, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=9.2, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=7.7, label="R4")
ggplot(df.long, aes(x=Day, y=value, col=name, lty=name)) +
geom_line() + geom_point() + theme_classic() + labs(lty="Veg. Index", col="Veg. Index") +
annotate("rect", xmin = as.Date("2019-07-11"), xmax = as.Date("2019-08-13"), ymin =0, ymax = 10, alpha = .2) +
annotate("text", x=as.Date("2019-07-11"), y=10, label="R0") +
annotate("text", x=as.Date("2019-08-01"), y=9.2, label="R2") +
annotate("text", x=as.Date("2019-08-13"), y=7.7, label="R4") +
ylab("Mean Value")
